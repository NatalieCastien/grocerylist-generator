{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Image.jsx","components/AddProductButton.jsx","components/ProductCard.jsx","components/AddButton.jsx","components/SubtractButton.jsx","components/GroceryListItem.jsx","components/GroceryInputField.jsx","components/AddRecipeButton.jsx","components/RecipeCard.jsx","components/AlertNote.jsx","components/Grocerypage.jsx","recipes.js","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","className","Image","props","src","cardimage","alt","AddProductButton","useState","isMouseOver","setMouseOver","style","backgroundColor","color","id","identifier","onMouseOver","onMouseOut","ProductCard","onClick","onChecked","name","Container","Row","Col","AddButton","buttonKey","onAdd","key","count","SubtractButton","onSubtract","GroceryListItem","listbuttonKey","item","product","productUppercase","charAt","toUpperCase","slice","marginLeft","onDelete","GroceryInputField","inputText","setInputText","handleClick","document","getElementById","focus","select","onKeyPress","event","placeholder","onChange","newItem","target","value","type","AddRecipeButton","RecipeCard","togglerId","togglerHash","image","img","Card","ingredients","recipeId","description","Button","UncontrolledCollapse","toggler","map","ingredient","textAlign","productname","AlertNote","cancel","accept","Grocerypage","setName","grocerylistName","setGrocerylistName","countCal","setCountCal","list","setList","showHeader","setShowHeader","showHeaderForm","setShowHeaderForm","showList","setShowList","showInspiration","setShowInspiration","showInspirationHeader","setShowInspirationHeader","showProducts","setShowProducts","showRecipes","setShowRecipes","handleSubmit","preventDefault","productExists","some","getIndex","findIndex","obj","findListItemByName","array","find","element","addItem","newId","shortid","generate","prevItems","foundId","index","newCount","deleteItem","addRecipeItems","productcount","filter","showInsp","addCount","subtractCount","objectCount","showPrintMessage","setShowPrintMessage","display","printableElements","innerHTML","oldPage","body","window","print","onSubmit","nameUppercase","listItem","marginTop","length","recipes","recipe","items","idIngredient","strIngredient","App","state","isLoaded","fetch","then","res","json","setState","meals","this","React","Component","ReactDOM","render"],"mappings":"6PASeA,MARf,WACI,OACA,gCACI,6DCWOC,MAbf,WACI,IACMC,GADc,IAAIC,MACCC,cACzB,OACA,4BAAQC,UAAU,uBAClB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,cAAb,wBAA6CH,O,8BCD1CI,MANf,SAAeC,GACb,OACE,yBAAKF,UAAU,aAAaG,IAAG,uDAAkDD,EAAME,UAAxD,QAAyEC,IAAI,gB,wBCmBjGC,MArBf,SAA0BJ,GAAQ,IAAD,EAEGK,oBAAS,GAFZ,mBAE1BC,EAF0B,KAEbC,EAFa,KAW3B,OACE,4BAAQT,UAAU,YAClBU,MAAO,CAACC,gBAAiBH,EAAc,QAAU,UAAWI,MAAOJ,EAAc,UAAY,SAC7FK,GAAIX,EAAMY,WACVC,YAXN,WACEN,GAAa,IAWTO,WATN,WACEP,GAAa,KAIT,MCwBOQ,MAjCf,SAAqBf,GACnB,OACE,yBAAKF,UAAU,OACfkB,QAAS,WACPhB,EAAMiB,UAAUjB,EAAMkB,QAEtB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAIA,kBAACC,EAAA,EAAD,CAAKvB,UAAU,iBACb,kBAAC,EAAD,CAAOI,UAAWF,EAAMkB,SAG1B,kBAACE,EAAA,EAAD,CAAKtB,UAAU,gBACf,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACIc,WAAYZ,EAAMY,WAClBM,KAAMlB,EAAMkB,SAIlB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAGvB,UAAU,mBAAmBE,EAAMkB,WCAjCI,MA5Bf,SAAmBtB,GAAQ,IAAD,EAEUK,oBAAS,GAFnB,mBAEnBC,EAFmB,KAENC,EAFM,KAGpBgB,EAAY,YAAcvB,EAAMW,GAShC,OACE,4BAAQb,UAAU,aAClBU,MAAO,CAACC,gBAAiBH,EAAc,UAAY,cAAeI,MAAOJ,EAAc,QAAU,WACjGK,GAAIX,EAAMY,WACVI,QAAS,WACLhB,EAAMwB,MAAMxB,EAAMkB,OAEtBO,IAAKF,EACLV,YAfN,WACEN,GAAa,IAeTO,WAbN,WACEP,GAAa,IAaTmB,MAAO1B,EAAM0B,MACbR,KAAMlB,EAAMkB,MAVZ,MCeOS,MA5Bf,SAAwB3B,GAAQ,IAAD,EAEKK,oBAAS,GAFd,mBAExBC,EAFwB,KAEXC,EAFW,KAGzBgB,EAAY,iBAAmBvB,EAAMW,GASrC,OACE,4BAAQb,UAAU,aAClBU,MAAO,CAACC,gBAAiBH,EAAc,UAAY,cAAeI,MAAOJ,EAAc,QAAU,WACjGK,GAAIX,EAAMY,WACVI,QAAS,WACLhB,EAAM4B,WAAW5B,EAAMkB,OAE3BO,IAAKF,EACLV,YAfN,WACEN,GAAa,IAeTO,WAbN,WACEP,GAAa,IAaTmB,MAAO1B,EAAM0B,MACbR,KAAMlB,EAAMkB,MAVZ,MCyCOW,MApDf,SAAyB7B,GACrB,IAAM8B,EAAgB,SAAW9B,EAAMW,GAEvC,GAAmB,KAAfX,EAAM+B,KAAa,CACnB,IAAIC,EAAUhC,EAAM+B,KAChBE,EAAmBD,EAAQE,OAAO,GAAGC,cAAgBH,EAAQI,MAAM,GACvE,OACI,6BACI,4BACI,6BACCH,GAGD,6BACI,8BACI,kBAAC,EAAD,CACIrB,WAAY,WAAaZ,EAAMW,GAC/Bc,IAAK,WAAaK,EAClBZ,KAAMlB,EAAM+B,KACZL,MAAO1B,EAAM0B,MACbE,WAAY5B,EAAM4B,cAI1B,0BAAMpB,MAAO,CAAC6B,WAAY,QAASrC,EAAM0B,OAEzC,8BACI,kBAAC,EAAD,CACId,WAAY,MAAQZ,EAAMW,GAC1Bc,IAAK,MAAQK,EACbZ,KAAMlB,EAAM+B,KACZL,MAAO1B,EAAM0B,MACbF,MAAOxB,EAAMwB,SAGrB,8BACI,4BAAQ1B,UAAU,eACdkB,QAAS,WACLhB,EAAMsC,SAAStC,EAAMW,MAF7B,SAWjB,OACH,+BClBO4B,MAhCf,SAA2BvC,GAAQ,IAAD,EACIK,mBAAS,IADb,mBACvBmC,EADuB,KACZC,EADY,KAQ9B,SAASC,IACP1C,EAAMwB,MAAMgB,GACZC,EAAa,IACbE,SAASC,eAAe,eAAeC,QACvCF,SAASC,eAAe,eAAeE,SASzC,OAEA,yBAAKhD,UAAU,OAAQiD,WARvB,SAAwBC,GACJ,UAAdA,EAAMvB,KACRiB,MAOA,2BAAOO,YAAY,yBAAyBtC,GAAG,cAAcuC,SArBjE,SAAsBF,GAClB,IAAMG,EAAUH,EAAMI,OAAOC,MAC7BZ,EAAaU,IAmBwEG,KAAK,OAAOD,MAAOb,IACxG,4BAAQ1C,UAAU,eAAekB,QAAS0B,GACxC,wC,wBCLKa,MArBf,SAAyBvD,GAAQ,IAAD,EAEIK,oBAAS,GAFb,mBAEzBC,EAFyB,KAEZC,EAFY,KAW1B,OACE,4BAAQT,UAAU,kBAClBU,MAAO,CAACC,gBAAiBH,EAAc,QAAU,UAAWI,MAAOJ,EAAc,UAAY,SAC7FK,GAAIX,EAAMY,WACVC,YAXN,WACEN,GAAa,IAWTO,WATN,WACEP,GAAa,KAIT,MCgDOiD,MAzDf,SAAoBxD,GAiBlB,IACMyD,EAAY,UADDzD,EAAMY,WAEjB8C,EAAc,IAAMD,EACpBE,EAAQ,UAAY3D,EAAM4D,IAGhC,OACI,kBAACC,EAAA,EAAD,CAAM/D,UAAU,cACd,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cAAcG,IAAK0D,EAAOxD,IAAI,oBAG/C,yBAAKL,UAAU,GACVkB,QAAS,WACPhB,EAAMiB,UAAUjB,EAAM8D,eAExB,kBAAC,EAAD,CACElD,WAAYZ,EAAM+D,SAClB7C,KAAMlB,EAAMkB,QAInB,yBAAKpB,UAAU,iBACb,4BAAKE,EAAMkB,MACX,2BAAIlB,EAAMgE,cAEV,6BACA,kBAACC,EAAA,EAAD,CAAQnE,UAAU,eAAea,GAAI8C,GACnC,yBAAK3D,UAAU,cAAcG,IAxBrB,wBAwBqCE,IAAI,gBAGnD,kBAAC+D,EAAA,EAAD,CAAsBC,QAAST,GACxB1D,EAAM8D,YAAYM,KA/CjC,SAAyBC,GACvB,OACE,6BACE,kBAACjD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKvB,UAAU,SAASU,MAAO,CAAC8D,UAAW,SACzC,2BAAID,EAAWE,cAEjB,kBAAClD,EAAA,EAAD,CAAKvB,UAAU,SACb,2BAAIuE,EAAW3C,iBCHZ8C,MAVf,SAAmBxE,GACf,OACI,6BACI,uBAAGF,UAAU,aAAb,yGACA,4BAAQA,UAAU,eAAekB,QAAShB,EAAMyE,QAAhD,UACA,4BAAQ3E,UAAU,WAAWkB,QAAShB,EAAM0E,QAA5C,Q,MCwWGC,MArWf,SAAqB3E,GAAQ,IAAD,EAEAK,mBAAS,IAFT,mBAEjBa,EAFiB,KAEX0D,EAFW,OAGsBvE,mBAAS,oBAH/B,mBAGjBwE,EAHiB,KAGAC,EAHA,OAIMzE,mBAAS,GAJf,mBAInB0E,EAJmB,KAITC,EAJS,OAKA3E,mBAAS,CAAC,CAACM,GAAI,GAAIO,KAAM,GAAIQ,MAAOqD,KALpC,mBAKjBE,EALiB,KAKXC,EALW,OAOY7E,mBAAS,QAPrB,mBAOjB8E,EAPiB,KAOLC,EAPK,OAQoB/E,mBAAS,gBAR7B,mBAQjBgF,EARiB,KAQDC,EARC,OASQjF,mBAAS,QATjB,mBASjBkF,EATiB,KASPC,EATO,OAUsBnF,mBAAS,QAV/B,mBAUjBoF,EAViB,KAUAC,EAVA,OAWkCrF,mBAAS,QAX3C,mBAWjBsF,EAXiB,KAWMC,EAXN,OAYgBvF,mBAAS,QAZzB,mBAYjBwF,EAZiB,KAYHC,EAZG,OAaczF,mBAAS,QAbvB,oBAajB0F,GAbiB,MAaJC,GAbI,MA8CxB,SAASC,GAAajD,GACpB8B,EAAmB5D,GACnBkE,EAAc,UACdE,EAAkB,QAClBE,EAAY,UACZE,EAAmB,QACnBE,EAAyB,SACzB5C,EAAMkD,iBASR,SAASC,GAAc5B,GACrB,OAAOU,EAAKmB,MAAK,SAASrE,GACxB,OAAOA,EAAKb,MAAQqD,KAKxB,SAAS8B,GAASrE,GAChB,OAAOiD,EAAKqB,WAAU,SAAAC,GAAG,OAAIA,EAAIrF,MAAQc,KAE3C,SAASwE,GAAmBC,EAAOvF,GACjC,OAAOuF,EAAMC,MAAK,SAACC,GACjB,OAAOA,EAAQzF,OAASA,KAK5B,SAAS0F,GAAQrC,GAEb,IAAsB,IADA4B,GAAc,CAAC5B,IACR,CAC3B,IAAIsC,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GAEJ,OADFhC,EAAY,GACJ,CAAE,CAACrE,GAAIkG,EAAO3F,KAAMqD,EAAa7C,MAAOqD,IAA9C,mBAA4DiC,WAE3D,CACH,IACMC,EADQT,GAAmBvB,EAAMV,GACjB5D,GAEhBuG,EAAQb,GAAS9B,GAGjB4C,EAFSlC,EAAKiC,GACOxF,MACI,EAE/B0F,GAAWH,GAEPJ,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GACN,MAAM,GAAN,mBAAWA,EAAU5E,MAAM,EAAG8E,IAA9B,CAAsC,CAACvG,GAAIkG,EAAO3F,KAAMqD,EAAa7C,MAAOyF,IAA5E,YAA0FH,EAAU5E,MAAM8E,SAKpH,SAASG,GAAevD,GAEtBA,EAAYM,KAAI,SAAoBC,GAG9B,IAAME,EAAcF,EAAWE,YACzB+C,EAAejD,EAAW3C,MAGhC,IAAsB,IAFAyE,GAAc,CAAC5B,IAER,CAC7B,IAAIsC,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GACJ,MAAM,CAAE,CAACrG,GAAIkG,EAAO3F,KAAMqD,EAAa7C,MAAO4F,IAA9C,mBAAgEN,WAE7D,CACH,IACMC,EADQT,GAAmBvB,EAAMV,GACjB5D,GAElBuG,EAAQb,GAAS9B,GAGf4C,EAFSlC,EAAKiC,GACOxF,MACI4F,EAG/BF,GAAWH,GAGHJ,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GACN,MAAM,GAAN,mBAAWA,EAAU5E,MAAM,EAAG8E,IAA9B,CAAsC,CAACvG,GAAIkG,EAAO3F,KAAMqD,EAAa7C,MAAOyF,IAA5E,YAA0FH,EAAU5E,MAAM8E,YAqC1H,SAASE,GAAWzG,GAClBuE,GAAQ,SAAA8B,GACN,OAAOA,EAAUO,QACf,SAACxF,GACC,OAAOpB,IAAOoB,EAAKpB,SAO3B,SAAS6G,GAASxE,GACO,kBAAnBA,EAAMI,OAAOzC,IACfmF,EAAgB,QAChBE,GAAe,SACa,iBAAnBhD,EAAMI,OAAOzC,KACtBmF,EAAgB,QAChBE,GAAe,SAInB,SAASyB,GAASvG,GACZ,IAAMgG,EAAQb,GAASnF,GAGjBiG,EAFSlC,EAAKiC,GACOxF,MACI,EAM/B0F,GAJcZ,GAAmBvB,EAAM/D,GACjBP,IAMtB,IAAIkG,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GACN,MAAM,GAAN,mBAAWA,EAAU5E,MAAM,EAAG8E,IAA9B,CAAsC,CAACvG,GAAIkG,EAAO3F,KAAMA,EAAMQ,MAAOyF,IAArE,YAAmFH,EAAU5E,MAAM8E,QAI3G,SAASQ,GAAcxG,GACrB,IAAMgG,EAAQb,GAASnF,GAEjByG,EADS1C,EAAKiC,GACOxF,MAErBuF,EADQT,GAAmBvB,EAAM/D,GACjBP,GACtB,GAAIgH,EAAc,EAAG,CACjB,IAAMR,EAAWQ,EAAc,EAG/BP,GAAWH,GAGX,IAAIJ,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GACN,MAAM,GAAN,mBAAWA,EAAU5E,MAAM,EAAG8E,IAA9B,CAAsC,CAACvG,GAAIkG,EAAO3F,KAAMA,EAAMQ,MAAOyF,IAArE,YAAmFH,EAAU5E,MAAM8E,aAGrGE,GAAWH,GArOK,OAqPsB5G,mBAAS,QArP/B,qBAqPnBuH,GArPmB,MAqPDC,GArPC,MAuQxB,OACA,6BACI,kBAACzG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvB,UAAU,YACf,4BAAQA,UAAU,cAAckB,QArB1C,WACE6G,GAAoB,YAoBZ,qBACA,yBAAKrH,MAAO,CAACsH,QAASF,KACpB,kBAAC,EAAD,CACElD,OAhBd,WAEE,IAAMqD,EAAoBpF,SAASC,eAAe,aAAaoF,UACzDC,EAAUtF,SAASuF,KAAKF,UAC9BrF,SAASuF,KAAKF,UAAY,2CAA6CD,EAAoB,iBAC3FI,OAAOC,QACPzF,SAASuF,KAAKF,UAAYC,GAWdxD,OArBd,WACEoD,GAAoB,YAwBR,yBAAKlH,GAAG,iBAAiBb,UAAU,eACjC,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBAAqBU,MAAO,CAACsH,QAAS3C,IACjD,4BAAKN,IAGT,0BAAM/E,UAAU,OAAOuI,SAAUpC,GAAclD,WAlOjE,SAAwBC,GACJ,UAAdA,EAAMvB,KACRwE,GAAajD,IAgO4ExC,MAAO,CAACsH,QAASzC,IACxF,2BACI/B,KAAK,OACLL,YAAY,+BACZC,SAnPxB,SAAsBF,GAClB4B,EAAQ5B,EAAMI,OAAOC,QAmPDA,MAAOnC,IAEX,4BAAQpB,UAAU,eAAewD,KAAK,UAAtC,SAGJ,yBAAK9C,MAAO,CAACsH,QAASvC,IACrB,kBAAC,EAAD,CAAmB/D,MAvJlC,SAAeN,EAAMQ,GACnB,IAAI4G,EAAgBpH,EAAKgB,OAAO,GAAGC,cAAgBjB,EAAKkB,MAAM,GAG9D,GAAqB,GAFC+D,GAAc,CAACmC,IAET,CAC5B,IAAIzB,EAAQC,IAAQC,WACpB7B,GAAQ,SAAA8B,GAEJ,OADFhC,EAAY,GACJ,CAAE,CAACrE,GAAIkG,EAAO3F,KAAMoH,EAAe5G,MAAOqD,IAAhD,mBAA8DiC,WAG3D,CACH,IACMC,EADQT,GAAmBvB,EAAMqD,GACjB3H,GAEhBuG,EAAQb,GAASiC,GAGjBnB,EAFSlC,EAAKiC,GACOxF,MACI,EAE/B0F,GAAWH,GAEX/B,GAAQ,SAAA8B,GACN,IAAIH,EAAQC,IAAQC,WACpB,MAAM,GAAN,mBAAWC,EAAU5E,MAAM,EAAG8E,IAA9B,CAAsC,CAACvG,GAAIkG,EAAO3F,KAAMoH,EAAe5G,MAAOyF,IAA9E,YAA4FH,EAAU5E,MAAM8E,aAkItG,yBAAKvG,GAAG,oBACJ,4BACCsE,EAAKb,KAAI,SAACmE,EAAUrB,GAAX,OACN,kBAAC,EAAD,CACAvG,GAAI4H,EAAS5H,GACbc,IAAK,WAAayF,EAClBnF,KAAMwG,EAASrH,KACfoB,SAAU8E,GACV1F,MAAO6G,EAAS7G,MAChBF,MAAOiG,GACP7F,WAAY8F,UAMpB,yBAAK/G,GAAG,YAAYH,MAAO,CAACsH,QAAQ,SAChC,4BAAKjD,GACL,4BACI,2BAAOrE,MAAO,CAACgI,UAAW,SACxB,+BACGvD,EAAKb,KAlFpC,SAAqBmE,EAAUrB,GAE9B,GAAIA,GADajC,EAAKwD,OAAS,EAE9B,OACE,4BACE,wBAAI3I,UAAU,cAAcyI,EAASrH,MACrC,wBAAIpB,UAAU,cAAcyI,EAAS7G,kBAsFjC,kBAACL,EAAA,EAAD,CAAKvB,UAAU,YACX,yBAAKA,UAAU,wBACX,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAIvB,UAAU,oBAAoBU,MAAO,CAACsH,QAASnC,IAAnD,iBAGJ,kBAACvE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKvB,UAAU,kBAAkBU,MAAO,CAACsH,QAASrC,IAChD,4BAAQ9E,GAAG,iBAAiBK,QAASwG,GAAU1H,UAAU,kBAAzD,YACA,4BAAQa,GAAG,gBAAgBK,QAASwG,GAAU1H,UAAU,iBAAxD,eAKN,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,aAAaU,MAAO,CAACsH,QAAS/B,KAC1C/F,EAAM0I,QAAQtE,KA7TjC,SAA0BuE,GACxB,OACE,kBAAC,EAAD,CACElH,IAAKkH,EAAOhI,GACZC,WAAY+H,EAAOhI,GACnBO,KAAMyH,EAAOzH,KACb8C,YAAa2E,EAAO3E,YACpBJ,IAAK+E,EAAO/E,IACZE,YAAa6E,EAAO7E,YACpB7C,UAAWoG,SAuTD,yBAAKvH,UAAU,cAAcU,MAAO,CAACsH,QAASjC,IAC7C7F,EAAM4I,MAAMxE,KA7U7B,SAA2BrC,GACvB,OACE,kBAAC,EAAD,CACEN,IAAKM,EAAK8G,aACVjI,WAAYmB,EAAK8G,aACjB3H,KAAMa,EAAK+G,cACXlF,IAAK7B,EAAK6B,IACV3C,UAAW2F,cC0YR8B,EA1aC,CACZ,CACI/H,GAAI,EACJiD,IAAK,iBACL1C,KAAM,cACN8C,YAAa,8BACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,UACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,KAInB,CACIf,GAAI,EACJiD,IAAK,aACL1C,KAAM,iBACN8C,YAAa,iDACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,4BACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,gBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,UACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,cACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,YACL1C,KAAM,kBACN8C,YAAa,6BACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,QACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,aACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,UACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,oBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,cACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,OACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,OACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,eACL1C,KAAM,WACN8C,YAAa,8CACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,WACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,iBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,aACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,cACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,QACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,eACL1C,KAAM,oBACN8C,YAAa,wCACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,OACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,mBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,UACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,YACL1C,KAAM,8BACN8C,YAAa,kDACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,QACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,QACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,WACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,UACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,oBACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,cACL1C,KAAM,mBACN8C,YAAa,2CACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,eACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,qBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,OACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,aACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,kBACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,aACL1C,KAAM,QACN8C,YAAa,sCACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,cACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,kBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,WACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,qBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,UACb7C,MAAO,KAKnB,CACIf,GAAI,EACJiD,IAAK,cACL1C,KAAM,sBACN8C,YAAa,6DACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,cACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,oBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,QACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,SACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,YACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,QACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,eACb7C,MAAO,KAInB,CACIf,GAAI,GACJiD,IAAK,WACL1C,KAAM,cACN8C,YAAa,8BACbF,YAAa,CACT,CACInD,GAAI,KACJ4D,YAAa,UACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,WACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,gBACb7C,MAAO,GAEX,CACIf,GAAI,KACJ4D,YAAa,gBACb7C,MAAO,MC/WRqH,E,kDA3CX,WAAY/I,GAAQ,IAAD,8BACf,cAAMA,IACDgJ,MAAQ,CACTJ,MAAO,GACPK,UAAU,GAJC,E,gEAQE,IAAD,OAChBC,MAAM,2DACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,EAAKC,SAAS,CACVV,MAAOS,EAAKE,MAAMnH,MAAM,EAAG,KAC3B6G,UAAU,S,+BAMZ,IAAD,EACqBO,KAAKR,MAAzBC,EADD,EACCA,SAAUL,EADX,EACWA,MACD,eAAOA,GACtB,OAAKK,EAKD,yBAAKnJ,UAAU,OACX,kBAAC,EAAD,MACA,kBAACqB,EAAA,EAAD,CAAWrB,UAAU,iBACjB,kBAAC,EAAD,CACI8I,MAAOA,EACPF,QAASA,KAGjB,kBAAC,EAAD,OAZG,+C,GAzBDe,IAAMC,WCSxBC,IAASC,OAAO,kBAAC,EAAD,MAASjH,SAASC,eAAe,W","file":"static/js/main.526391e8.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header() {\r\n    return (\r\n    <header>\r\n        <h1>Create your own grocerylist</h1>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    const currentDate = new Date();\r\n    const year = currentDate.getFullYear();\r\n    return (\r\n    <footer className=\"navbar-fixed-bottom\">\r\n    <div className=\"footerContainer\">\r\n        <div className=\"footerStyle\">\r\n            <p className=\"footerText\">© Natalie Castien {year}</p>\r\n        </div>\r\n    </div>\r\n    </footer>)\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction Image(props) {\r\n  return (\r\n    <img className=\"circle-img\" src={`https://www.themealdb.com/images/ingredients/${props.cardimage}.png`} alt=\"avatar_img\" />      \r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React, {useState} from \"react\";\r\n\r\nfunction AddProductButton(props) {\r\n    \r\nconst [isMouseOver, setMouseOver] = useState(false);\r\n\r\n  function handleMouseOver() {\r\n    setMouseOver(true);\r\n  }\r\n  function handleMouseOut() {\r\n    setMouseOver(false);\r\n  }\r\n\r\n      return (\r\n        <button className=\"addButton\"\r\n        style={{backgroundColor: isMouseOver ? \"white\" : \"#0A8F83\", color: isMouseOver ? \"#0A8F83\" : \"white\"}}\r\n        id={props.identifier} \r\n        onMouseOver={handleMouseOver}\r\n        onMouseOut={handleMouseOut}\r\n        >+</button>\r\n      )\r\n}\r\n\r\nexport default AddProductButton;\r\n","import React from \"react\";\r\nimport Image from \"./Image\";\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport AddProductButton from \"./AddProductButton\";\r\n\r\nfunction ProductCard(props) {\r\n  return (\r\n    <div className=\"card\" \r\n    onClick={() => {\r\n      props.onChecked(props.name);\r\n    }}>\r\n      <Container>\r\n      <Row>\r\n      {/* <Col className=\"productcolumn\">     \r\n        <span className=\"name top\">{props.name}</span>            \r\n      </Col> */}\r\n      <Col className=\"productcolumn\">\r\n        <Image cardimage={props.name} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"addButtonRow\">\r\n      <div className=\"addButtonDiv\">\r\n        <AddProductButton\r\n            identifier={props.identifier}\r\n            name={props.name}\r\n          />\r\n      </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p className=\"productCardName\">{props.name}</p>\r\n        </Col>\r\n      </Row>      \r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard;","import React, {useState} from \"react\";\r\n\r\nfunction AddButton(props) {\r\n    \r\nconst [isMouseOver, setMouseOver] = useState(false);\r\nconst buttonKey = \"addButton\" + props.id;\r\n   \r\n  function handleMouseOver() {\r\n    setMouseOver(true);\r\n  }\r\n  function handleMouseOut() {\r\n    setMouseOver(false);\r\n  }\r\n\r\n      return (\r\n        <button className=\"listButton\"\r\n        style={{backgroundColor: isMouseOver ? \"#0A8F83\" : \"transparent\", color: isMouseOver ? \"white\" : \"#0A8F83\"}}\r\n        id={props.identifier} \r\n        onClick={() => {\r\n            props.onAdd(props.name);\r\n        }}\r\n        key={buttonKey}\r\n        onMouseOver={handleMouseOver}\r\n        onMouseOut={handleMouseOut}\r\n        count={props.count}     \r\n        name={props.name}   \r\n        >+</button>\r\n      )\r\n}\r\n\r\nexport default AddButton;\r\n","import React, {useState} from \"react\";\r\n\r\nfunction SubtractButton(props) {\r\n    \r\nconst [isMouseOver, setMouseOver] = useState(false);\r\nconst buttonKey = \"subtractButton\" + props.id;\r\n  \r\n  function handleMouseOver() {\r\n    setMouseOver(true);\r\n  }\r\n  function handleMouseOut() {\r\n    setMouseOver(false);\r\n  }\r\n\r\n      return (\r\n        <button className=\"listButton\"\r\n        style={{backgroundColor: isMouseOver ? \"#0A8F83\" : \"transparent\", color: isMouseOver ? \"white\" : \"#0A8F83\"}}\r\n        id={props.identifier} \r\n        onClick={() => {\r\n            props.onSubtract(props.name);\r\n        }}\r\n        key={buttonKey}\r\n        onMouseOver={handleMouseOver}\r\n        onMouseOut={handleMouseOut}\r\n        count={props.count}     \r\n        name={props.name}   \r\n        >-</button>\r\n      )\r\n}\r\n\r\nexport default SubtractButton;\r\n","import React from \"react\";\r\nimport AddButton from \"./AddButton\";\r\nimport SubtractButton from \"./SubtractButton\";\r\n\r\nfunction GroceryListItem(props) {\r\n    const listbuttonKey = \"button\" + props.id;\r\n\r\n    if (props.item !== \"\") {    \r\n        var product = props.item;\r\n        var productUppercase = product.charAt(0).toUpperCase() + product.slice(1);\r\n        return (\r\n            <div>\r\n                <li>\r\n                    <div>\r\n                    {productUppercase}\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <span>\r\n                            <SubtractButton                        \r\n                                identifier={\"subtract\" + props.id}\r\n                                key={\"subtract\" + listbuttonKey}\r\n                                name={props.item}\r\n                                count={props.count}\r\n                                onSubtract={props.onSubtract}\r\n                            />\r\n                        </span>\r\n                        \r\n                        <span style={{marginLeft: \"8px\"}}>{props.count}</span>\r\n\r\n                        <span>\r\n                            <AddButton                        \r\n                                identifier={\"add\" + props.id}\r\n                                key={\"add\" + listbuttonKey}\r\n                                name={props.item}\r\n                                count={props.count}\r\n                                onAdd={props.onAdd}\r\n                            />\r\n                        </span>\r\n                        <span>\r\n                            <button className=\"deleteButton\"\r\n                                onClick={() => {\r\n                                    props.onDelete(props.id);\r\n                                }}>\r\n                                X\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n            </div>\r\n        );\r\n    } else return (\r\n        <div></div>  \r\n    );\r\n}\r\n\r\nexport default GroceryListItem;","import React, {useState} from \"react\";\r\n\r\nfunction GroceryInputField(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n\r\n    function handleChange(event) {\r\n        const newItem = event.target.value;\r\n        setInputText(newItem);\r\n      };\r\n\r\n    function handleClick() {\r\n      props.onAdd(inputText);\r\n      setInputText(\"\");\r\n      document.getElementById('groceryItem').focus();\r\n      document.getElementById('groceryItem').select(); \r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n      if (event.key === \"Enter\") {\r\n        handleClick();\r\n      }\r\n    }\r\n\r\n    return (\r\n    \r\n    <div className=\"form\"  onKeyPress={handleKeyPress}>\r\n        <input placeholder=\"Add a product manually\" id=\"groceryItem\" onChange={handleChange} type=\"text\" value={inputText}/>\r\n        <button className=\"squareButton\" onClick={handleClick}>\r\n          <span>Add</span>\r\n        </button>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default GroceryInputField;\r\n\r\n","import React, {useState} from \"react\";\r\n\r\nfunction AddRecipeButton(props) {\r\n    \r\nconst [isMouseOver, setMouseOver] = useState(false);\r\n\r\n  function handleMouseOver() {\r\n    setMouseOver(true);\r\n  }\r\n  function handleMouseOut() {\r\n    setMouseOver(false);\r\n  }\r\n\r\n      return (\r\n        <button className=\"recipeAddButton\"\r\n        style={{backgroundColor: isMouseOver ? \"white\" : \"#0A8F83\", color: isMouseOver ? \"#0A8F83\" : \"white\"}}\r\n        id={props.identifier} \r\n        onMouseOver={handleMouseOver}\r\n        onMouseOut={handleMouseOut}\r\n        >+</button>\r\n      )\r\n}\r\n\r\nexport default AddRecipeButton;\r\n","import React from \"react\";\r\nimport {Card, Button, Row, Col} from 'react-bootstrap';\r\nimport { UncontrolledCollapse } from 'reactstrap';\r\nimport AddRecipeButton from \"./AddRecipeButton\";\r\n\r\nfunction RecipeCard(props) {  \r\n\r\n  function showIngredients(ingredient) {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col className=\"col-10\" style={{textAlign: \"left\"}}>\r\n            <p>{ingredient.productname}</p>\r\n          </Col>\r\n          <Col className=\"col-2\">\r\n            <p>{ingredient.count}</p>\r\n          </Col>\r\n        </Row>\r\n      </div>     \r\n    );\r\n  }\r\n\r\n  const recipeId = props.identifier;\r\n  const togglerId = \"toggler\" + recipeId;\r\n  const togglerHash = \"#\" + togglerId;\r\n  const image = \"images/\" + props.img;\r\n  const arrowdown = \"images/arrow-down.png\";\r\n\r\n  return (\r\n      <Card className=\"recipeCard\">\r\n        <div className=\"recipeCardImage\">\r\n          <img className=\"recipeImage\" src={image} alt=\"Card image cap\" />\r\n        </div>\r\n\r\n        <div className=\"\" \r\n             onClick={() => {\r\n               props.onChecked(props.ingredients);\r\n             }}>\r\n             <AddRecipeButton            \r\n               identifier={props.recipeId}\r\n               name={props.name}\r\n             />      \r\n        </div>\r\n\r\n        <div className=\"recipeNameBox\">\r\n          <h4>{props.name}</h4>\r\n          <p>{props.description}</p>\r\n          </div>\r\n          <div>      \r\n          <Button className=\"togglebutton\" id={togglerId}>\r\n            <img className=\"toggleArrow\" src={arrowdown} alt=\"arrow down\" />\r\n          </Button>\r\n\r\n          <UncontrolledCollapse toggler={togglerHash}>              \r\n                {props.ingredients.map(showIngredients)}                \r\n            </UncontrolledCollapse>            \r\n          \r\n        </div>\r\n      </Card>\r\n  );\r\n}\r\n\r\nexport default RecipeCard;","import React from \"react\";\r\n\r\nfunction AlertNote(props) {    \r\n    return (\r\n        <div>\r\n            <p className=\"alertnote\">Are you sure you want to print your grocerylist? After this you cannot edit the grocerylist any more.</p>\r\n            <button className=\"cancelButton\" onClick={props.cancel}>Cancel</button>\r\n            <button className=\"okButton\" onClick={props.accept}>Ok</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertNote;","import React, {useState} from \"react\";\r\nimport shortid from 'shortid';\r\nimport ProductCard from \"./ProductCard\";\r\nimport GroceryListItem from \"./GroceryListItem\";\r\nimport GroceryInputField from \"./GroceryInputField\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport AlertNote from \"./AlertNote\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nfunction Grocerypage(props) {    \r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [grocerylistName, setGrocerylistName] = useState(\"Name grocerylist\");\r\n    var [countCal, setCountCal] = useState(1);\r\n    const [list, setList] = useState([{id: \"\", name: \"\", count: countCal}]);\r\n    \r\n    const [showHeader, setShowHeader] = useState(\"none\");\r\n    const [showHeaderForm, setShowHeaderForm] = useState(\"inline-block\");\r\n    const [showList, setShowList] = useState(\"none\");\r\n    const [showInspiration, setShowInspiration] = useState(\"none\");\r\n    const [showInspirationHeader, setShowInspirationHeader] = useState(\"none\");\r\n    const [showProducts, setShowProducts] = useState(\"none\");\r\n    const [showRecipes, setShowRecipes] = useState(\"none\");\r\n\r\n    function createProductCard(item) {\r\n        return (\r\n          <ProductCard\r\n            key={item.idIngredient}\r\n            identifier={item.idIngredient}\r\n            name={item.strIngredient}\r\n            img={item.img} \r\n            onChecked={addItem}       \r\n          />\r\n        );\r\n    }\r\n    \r\n    function createRecipeCard(recipe) {\r\n      return (\r\n        <RecipeCard\r\n          key={recipe.id}\r\n          identifier={recipe.id}\r\n          name={recipe.name}\r\n          description={recipe.description}\r\n          img={recipe.img} \r\n          ingredients={recipe.ingredients}\r\n          onChecked={addRecipeItems}       \r\n        />\r\n      );\r\n    }\r\n\r\n    // Set grocerylist name when change\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    // After grocerylist name submitted, show/hide certain elements\r\n    function handleSubmit(event) {\r\n      setGrocerylistName(name);\r\n      setShowHeader(\"inline\");\r\n      setShowHeaderForm(\"none\");\r\n      setShowList(\"inline\");\r\n      setShowInspiration(\"flex\");\r\n      setShowInspirationHeader(\"block\");\r\n      event.preventDefault();\r\n  }\r\n  function handleKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      handleSubmit(event);\r\n    }\r\n  }\r\n\r\n    // Check whether chosen product is already on the list\r\n    function productExists(productname) {\r\n      return list.some(function(item) {\r\n        return item.name == productname;\r\n      }); \r\n    }\r\n\r\n    // Get index of product in the array\r\n    function getIndex(product) {\r\n      return list.findIndex(obj => obj.name == product);\r\n    }\r\n    function findListItemByName(array, name) {\r\n      return array.find((element) => {\r\n        return element.name === name;\r\n      })\r\n    }\r\n    \r\n    // Add product to the list via the inspiration product cards\r\n    function addItem(productname) {                \r\n        const productOnList = productExists([productname]);\r\n        if (productOnList === false) {\r\n          var newId = shortid.generate();\r\n          setList(prevItems => {\r\n            setCountCal(1);\r\n              return [{id: newId, name: productname, count: countCal}, ...prevItems] ;     \r\n          });                      \r\n        } else {\r\n            const found = findListItemByName(list, productname);  \r\n            const foundId = found.id;\r\n            \r\n            const index = getIndex(productname);\r\n            const object = list[index];\r\n            const objectCount = object.count;            \r\n            const newCount = objectCount + 1;\r\n            // Delete the item first\r\n            deleteItem(foundId);\r\n            // Add the item to the list again with the new count\r\n            var newId = shortid.generate();\r\n            setList(prevItems => {\r\n              return [...prevItems.slice(0, index), {id: newId, name: productname, count: newCount}, ...prevItems.slice(index)] ;     \r\n              });    \r\n        }   \r\n    }\r\n\r\n    function addRecipeItems(ingredients) {\r\n      var previousTime = 0;\r\n      ingredients.map(function addproduct(ingredient) {\r\n          // console.log(ingredient.count);\r\n          \r\n            const productname = ingredient.productname;\r\n            const productcount = ingredient.count;\r\n            const productOnList = productExists([productname]);\r\n            \r\n            if (productOnList === false) {\r\n            var newId = shortid.generate();\r\n            setList(prevItems => {\r\n                return [{id: newId, name: productname, count: productcount}, ...prevItems] ;     \r\n                });                      \r\n            } else {\r\n                const found = findListItemByName(list, productname);  \r\n                const foundId = found.id;\r\n\r\n                var index = getIndex(productname);\r\n                const object = list[index];\r\n                const objectCount = object.count;            \r\n                const newCount = objectCount + productcount;\r\n               \r\n                // Delete the item first\r\n                deleteItem(foundId);\r\n\r\n                // Add the item to the list again with the new count                                  \r\n                    var newId = shortid.generate();\r\n                    setList(prevItems => {\r\n                      return [...prevItems.slice(0, index), {id: newId, name: productname, count: newCount}, ...prevItems.slice(index)] ;     \r\n                      });                    \r\n            }             \r\n      })     \r\n  }\r\n    \r\n    // Add product to te list via the input field\r\n      function onAdd(name, count) {\r\n        var nameUppercase = name.charAt(0).toUpperCase() + name.slice(1);\r\n        const productOnList = productExists([nameUppercase]);\r\n        \r\n        if (productOnList == false) {\r\n        var newId = shortid.generate();\r\n        setList(prevItems => {\r\n          setCountCal(1);\r\n            return [{id: newId, name: nameUppercase, count: countCal}, ...prevItems] ;     \r\n            });  \r\n\r\n        } else {\r\n            const found = findListItemByName(list, nameUppercase);  \r\n            const foundId = found.id;\r\n            \r\n            const index = getIndex(nameUppercase);\r\n            const object = list[index];\r\n            const objectCount = object.count;            \r\n            const newCount = objectCount + 1;\r\n            \r\n            deleteItem(foundId);\r\n\r\n            setList(prevItems => {\r\n              var newId = shortid.generate();\r\n              return [...prevItems.slice(0, index), {id: newId, name: nameUppercase, count: newCount}, ...prevItems.slice(index)] ;     \r\n              });    \r\n        }         \r\n      }\r\n    \r\n      // Delete an item from the list\r\n      function deleteItem(id) {\r\n        setList(prevItems => {\r\n          return prevItems.filter(\r\n            (item) => {              \r\n              return id !== item.id;\r\n            }\r\n          )\r\n        })\r\n      }\r\n\r\n      // Toggle between products and recipes\r\n      function showInsp(event) {\r\n        if (event.target.id == \"productsbutton\") {\r\n          setShowProducts(\"flex\");\r\n          setShowRecipes(\"none\");\r\n        } else if (event.target.id == \"recipesbutton\") {\r\n          setShowProducts(\"none\");\r\n          setShowRecipes(\"flex\");\r\n        }\r\n      }\r\n\r\n      function addCount(name) {\r\n            const index = getIndex(name);\r\n            const object = list[index];\r\n            const objectCount = object.count;            \r\n            const newCount = objectCount + 1;\r\n\r\n            const found = findListItemByName(list, name);  \r\n            const foundId = found.id;\r\n\r\n            // Delete the item first\r\n            deleteItem(foundId);\r\n\r\n            // Add the item to the list again with the new count\r\n            var newId = shortid.generate();\r\n            setList(prevItems => {\r\n              return [...prevItems.slice(0, index), {id: newId, name: name, count: newCount}, ...prevItems.slice(index)] ;     \r\n              });            \r\n      }\r\n\r\n      function subtractCount(name) {\r\n        const index = getIndex(name);\r\n        const object = list[index];\r\n        const objectCount = object.count;\r\n        const found = findListItemByName(list, name);  \r\n        const foundId = found.id;\r\n        if (objectCount > 1) {\r\n            const newCount = objectCount - 1;\r\n\r\n            // Delete the item first\r\n            deleteItem(foundId);\r\n\r\n            // Add the item to the list again with the new count\r\n            var newId = shortid.generate();\r\n            setList(prevItems => {\r\n              return [...prevItems.slice(0, index), {id: newId, name: name, count: newCount}, ...prevItems.slice(index)];     \r\n              });    \r\n          } else {\r\n            deleteItem(foundId);\r\n          }\r\n    \r\n  }\r\n\r\n  function createTable(listItem, index) {\r\n   const lastItem = list.length - 1;\r\n   if (index != lastItem) {\r\n    return (\r\n      <tr>\r\n        <td className=\"printcol-1\">{listItem.name}</td>\r\n        <td className=\"printcol-2\">{listItem.count}</td>\r\n      </tr>\r\n    );\r\n  }}\r\n\r\n  const [showPrintMessage, setShowPrintMessage] = useState(\"none\");\r\n  function showPrintAlert() {\r\n    setShowPrintMessage(\"inline\");\r\n  }\r\n\r\n  function hidePrintMessage() {\r\n    setShowPrintMessage(\"none\");\r\n  }\r\n\r\n  function printGroceryList() {\r\n\r\n    const printableElements = document.getElementById('groceries').innerHTML;\r\n    const oldPage = document.body.innerHTML;\r\n    document.body.innerHTML = '<html><head><title></title></head><body>' + printableElements + '</body></html>';\r\n    window.print();\r\n    document.body.innerHTML = oldPage;\r\n  }\r\n\r\n    return(\r\n    <div>\r\n        <Row>\r\n            <Col className=\"col-md-4\">\r\n            <button className=\"printButton\" onClick={showPrintAlert}>Print grocerylist</button>\r\n            <div style={{display: showPrintMessage}}>\r\n              <AlertNote \r\n                accept={printGroceryList}\r\n                cancel={hidePrintMessage}                \r\n              />   \r\n            </div>         \r\n\r\n                <div id=\"groceryListDiv\" className=\"grocerylist\">                \r\n                  <div className=\"container groceryNote\">                    \r\n                    <div className=\"grocerylistheading\" style={{display: showHeader}}>\r\n                        <h1>{grocerylistName}</h1>\r\n                    </div>\r\n\r\n                    <form className=\"form\" onSubmit={handleSubmit} onKeyPress={handleKeyPress} style={{display: showHeaderForm}}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"the name of your grocerylist\"\r\n                            onChange={handleChange}\r\n                            value={name}\r\n                        />\r\n                        <button className=\"squareButton\" type=\"submit\">Save</button>\r\n                    </form>\r\n\r\n                    <div style={{display: showList}}>\r\n                     <GroceryInputField onAdd={onAdd} />     \r\n                    </div>\r\n\r\n                    <div id=\"groceryListItems\">\r\n                        <ul>\r\n                        {list.map((listItem, index) => (\r\n                            <GroceryListItem\r\n                            id={listItem.id}\r\n                            key={\"listitem\" + index}\r\n                            item={listItem.name}\r\n                            onDelete={deleteItem}\r\n                            count={listItem.count}\r\n                            onAdd={addCount}\r\n                            onSubtract={subtractCount}\r\n                            />\r\n                        ))}\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div id=\"groceries\" style={{display:\"none\"}}>\r\n                        <h1>{grocerylistName}</h1>\r\n                        <ul>                        \r\n                            <table style={{marginTop: \"50px\"}}>\r\n                              <tbody>\r\n                                {list.map(createTable)}\r\n                              </tbody>\r\n                            </table>                                                                              \r\n                          </ul>\r\n                    </div> \r\n\r\n                </div>                    \r\n              </div>\r\n            </Col>\r\n\r\n            <Col className=\"col-md-8\">\r\n                <div className=\"inspirationHeaderDiv\">\r\n                    <Row>\r\n                      <Col>\r\n                        <h1 className=\"inspirationHeader\" style={{display: showInspirationHeader}}>Inspiration</h1>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <div className=\"inspirationList\" style={{display: showInspiration}}>                  \r\n                          <button id=\"productsbutton\" onClick={showInsp} className=\"productsButton\">Products</button>\r\n                          <button id=\"recipesbutton\" onClick={showInsp} className=\"recipesButton\">Recipes</button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    </div>\r\n                    <div className=\"secondColumn\">\r\n                    <div className=\"recipelist\" style={{display: showRecipes}}>\r\n                      {props.recipes.map(createRecipeCard)}\r\n                    </div>\r\n\r\n                    <div className=\"productlist\" style={{display: showProducts}}>\r\n                    {props.items.map(createProductCard)}                                \r\n                    </div>\r\n                </div>\r\n            </Col>   \r\n        </Row>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Grocerypage;","const recipes = [\r\n    {\r\n        id: 1,\r\n        img: \"linzensoep.png\",\r\n        name: \"Lentil soup\",\r\n        description: \"This is a vegan lentil soup\",\r\n        ingredients: [\r\n            {   \r\n                id: 9901,             \r\n                productname: \"Lentils\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9902,           \r\n                productname: \"Coconut milk\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9903,        \r\n                productname: \"Tomato\",\r\n                count: 3                \r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        img: \"madras.jpg\",\r\n        name: \"Chicken madras\",\r\n        description: \"This is a vegetarian version of chicken madras\",\r\n        ingredients: [\r\n            {    \r\n                id: 9904,            \r\n                productname: \"Vegetarian chicken pieces\",\r\n                count: 1                \r\n            },\r\n            {           \r\n                id: 9905,     \r\n                productname: \"Creme fraiche\",\r\n                count: 1                \r\n            },\r\n            {           \r\n                id: 9906,     \r\n                productname: \"Paprika\",\r\n                count: 1                \r\n            },\r\n            {      \r\n                id: 9907,          \r\n                productname: \"Green beans\",\r\n                count: 1                \r\n            },\r\n            {           \r\n                id: 9908,     \r\n                productname: \"Madras herbs\",\r\n                count: 1                \r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        img: \"chili.jpg\",\r\n        name: \"Chili sin carne\",\r\n        description: \"This is a vegan chili meal\",\r\n        ingredients: [\r\n            {   \r\n                id: 9909,             \r\n                productname: \"Onion\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9910,           \r\n                productname: \"Garlic toe\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9911,        \r\n                productname: \"Lentils\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9912,        \r\n                productname: \"Vegan minced meat\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9913,        \r\n                productname: \"Tomato\",\r\n                count: 3                \r\n            },\r\n            {        \r\n                id: 9914,        \r\n                productname: \"Kidney beans\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9915,        \r\n                productname: \"Chili herbs\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9916,        \r\n                productname: \"Corn\",\r\n                count: 1                \r\n            },            \r\n            {        \r\n                id: 9917,        \r\n                productname: \"Rice\",\r\n                count: 1                \r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        img: \"couscous.jpg\",\r\n        name: \"Couscous\",\r\n        description: \"Vegetarian lemon feta couscous with spinach\",\r\n        ingredients: [\r\n            {   \r\n                id: 9918,             \r\n                productname: \"Couscous\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9919,           \r\n                productname: \"Frozen spinach\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9920,        \r\n                productname: \"Red pepper\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9921,        \r\n                productname: \"Chickpeas\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9922,        \r\n                productname: \"Feta cheese\",\r\n                count: 2\r\n            },\r\n            {        \r\n                id: 9923,        \r\n                productname: \"Lemon\",\r\n                count: 1                \r\n            }            \r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        img: \"noodles2.jpg\",\r\n        name: \"Asian noodle bowl\",\r\n        description: \"Vegetarian rice noodle bowl with tofu\",\r\n        ingredients: [\r\n            {   \r\n                id: 9924,             \r\n                productname: \"Tofu\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9925,           \r\n                productname: \"Carrot\",\r\n                count: 3                \r\n            },\r\n            {        \r\n                id: 9926,        \r\n                productname: \"Edaname soybeans\",\r\n                count: 4                \r\n            },\r\n            {        \r\n                id: 9927,        \r\n                productname: \"Cabbage\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9928,        \r\n                productname: \"Rice noodles\",\r\n                count: 2\r\n            },\r\n            {        \r\n                id: 9929,        \r\n                productname: \"Sesame seeds\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9930,        \r\n                productname: \"Soy Sauce\",\r\n                count: 1                \r\n            }            \r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 6,\r\n        img: \"pasta.png\",\r\n        name: \"Mushroom pasta with spinach\",\r\n        description: \"Vegetarian pasta dish with mushroom and spinach\",\r\n        ingredients: [\r\n            {   \r\n                id: 9931,             \r\n                productname: \"Pasta\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9932,           \r\n                productname: \"Onion\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9933,        \r\n                productname: \"Garlic\",\r\n                count: 3                \r\n            },\r\n            {        \r\n                id: 9934,        \r\n                productname: \"Mushroom\",\r\n                count: 4               \r\n            },\r\n            {        \r\n                id: 9935,        \r\n                productname: \"Spinach\",\r\n                count: 2\r\n            },\r\n            {        \r\n                id: 9936,        \r\n                productname: \"Pine nuts\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9937,        \r\n                productname: \"Soy Sauce\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9938,        \r\n                productname: \"Plant-based cream\",\r\n                count: 1                \r\n            }            \r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 7,\r\n        img: \"risotto.jpg\",\r\n        name: \"Mushroom risotto\",\r\n        description: \"Vegan risotto with mushrooms and spinach\",\r\n        ingredients: [\r\n            {   \r\n                id: 9939,             \r\n                productname: \"Risotto rice\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9940,           \r\n                productname: \"Chestnut mushrooms\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9941,        \r\n                productname: \"Red onion\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9942,        \r\n                productname: \"Leek\",\r\n                count: 1               \r\n            },\r\n            {        \r\n                id: 9943,        \r\n                productname: \"Tomato\",\r\n                count: 2\r\n            },\r\n            {        \r\n                id: 9944,        \r\n                productname: \"White wine\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9945,        \r\n                productname: \"Garlic\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9946,        \r\n                productname: \"Vegetable stock\",\r\n                count: 1                \r\n            }            \r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 8,\r\n        img: \"quiche.jpg\",\r\n        name: \"Quich\",\r\n        description: \"Quiche with asparagus and mushrooms\",\r\n        ingredients: [\r\n            {   \r\n                id: 9947,             \r\n                productname: \"Puff pastry\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9948,           \r\n                productname: \"Green asparagus\",\r\n                count: 3                \r\n            },\r\n            {        \r\n                id: 9949,        \r\n                productname: \"Red onion\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9950,        \r\n                productname: \"Tomato\",\r\n                count: 3               \r\n            },\r\n            {        \r\n                id: 9951,        \r\n                productname: \"Carrot\",\r\n                count: 2\r\n            },\r\n            {        \r\n                id: 9952,        \r\n                productname: \"Rosemary\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9953,        \r\n                productname: \"Spring onion\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9954,        \r\n                productname: \"Chestnut mushrooms\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9955,        \r\n                productname: \"Spinach\",\r\n                count: 1                \r\n            }            \r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 9,\r\n        img: \"paprika.jpg\",\r\n        name: \"Stuffed bell pepper\",\r\n        description: \"Bell pepper filled with mushrooms, vegan meat and couscous\",\r\n        ingredients: [\r\n            {   \r\n                id: 9956,             \r\n                productname: \"Bell pepper\",\r\n                count: 4                \r\n            },\r\n            {     \r\n                id: 9957,           \r\n                productname: \"Vegan minced meat\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9958,        \r\n                productname: \"Onion\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9959,        \r\n                productname: \"Garlic\",\r\n                count: 3               \r\n            },\r\n            {        \r\n                id: 9960,        \r\n                productname: \"Mushrooms\",\r\n                count: 2\r\n            },\r\n            {        \r\n                id: 9961,        \r\n                productname: \"Soy sauce\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9962,        \r\n                productname: \"Herbs\",\r\n                count: 2                \r\n            },\r\n            {        \r\n                id: 9963,        \r\n                productname: \"Tomato paste\",\r\n                count: 1                \r\n            }              \r\n        ]\r\n    },\r\n    {\r\n        id: 10,\r\n        img: \"cake.jpg\",\r\n        name: \"No-egg cake\",\r\n        description: \"Cake baked without any eggs\",\r\n        ingredients: [\r\n            {   \r\n                id: 9964,             \r\n                productname: \"Cakemix\",\r\n                count: 1                \r\n            },\r\n            {     \r\n                id: 9965,           \r\n                productname: \"Soy milk\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9966,        \r\n                productname: \"Sunflower oil\",\r\n                count: 1                \r\n            },\r\n            {        \r\n                id: 9967,        \r\n                productname: \"Vanilla sugar\",\r\n                count: 1               \r\n            } \r\n        ]\r\n    },\r\n\r\n]\r\n\r\nexport default recipes;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Grocerypage from \"./Grocerypage\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport recipes from \"../recipes\";\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                items: json.meals.slice(0, 500),\r\n                isLoaded: true,\r\n            })\r\n        });\r\n    }\r\n      \r\n\r\n    render() {       \r\n        var { isLoaded, items } = this.state;\r\n        const groceries = {...items};\r\n        if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        }    \r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Header></Header>               \r\n                <Container className=\"mainContainer\">            \r\n                    <Grocerypage \r\n                        items={items}\r\n                        recipes={recipes}                        \r\n                    />\r\n                </Container>\r\n                <Footer></Footer>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n} \r\n\r\nexport default App;","//1. Create a new React app.\n//2. Create a App.jsx component.\n//3. Create a Header.jsx component that renders a <header> element\n//to show the Keeper App name in an <h1>.\n//4. Create a Footer.jsx component that renders a <footer> element\n//to show a copyright message in a <p> with a dynamically updated year.\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://l1pp6.csb.app/\n\n//HINT: You will need to study the classes in teh styles.css file to appy styling.\n\nimport React from \"../node_modules/react\";\nimport ReactDOM from \"../node_modules/react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}